{
    "title": "BigOven",
    "description": "#Documentation\r\n\r\nThis is the documentation for the partner endpoint of the BigOven Recipe and Grocery List API.\r\n\r\nThe update brings with it Swagger-based documentation. [Swagger](http://swagger.io) is an emerging standard for describing REST-based APIs, and with this Swagger-compliant endpoint (above), you can make ready-to-go interface libraries for your code via [swagger-codegen](https://github.com/swagger-api/swagger-codegen). For instance, it's easy to generate libraries for Node.js, Java, Ruby, ASP.NET MVC, jQuery, php and more!\r\n\r\nYou can also try out the endpoint calls with your own api_key right here on this page. Be sure to enter your api_key above to use the \"Try it out!\" buttons on this page.\r\n\r\n##Start Here\r\n\r\nDevelopers new to the BigOven API should start with this version, not with the legacy API. We'll be making improvements to this API over time, and doing only bug fixes on the v1 API.\r\n\r\n\r\n\r\nTo pretend you're a BigOven user (for instance, to get your recently viewed recipes or your grocery list), you need to pass in Basic Authentication information in the header, just as with the v1 API. We do now require that you make all calls via https. You need to pass your api_key in with every call, though this can now be done on the header (send a request header \"X-BigOven-API-Key\" set to your api_key value, e.g., Request[\"X-BigOven-API-Key\"]=\"your-key-here\".)\r\n\r\n##Migration Notes\r\n\r\nFor existing partners, we encourage you to [migrate](http://api2.bigoven.com), and while at this writing we have no hard-and-fast termination date for the v1 API, we strongly prefer that you migrate by January 1, 2017. While the changes aren't overly complex, there are several breaking changes, including refactoring of recipe search and results and removal of support for XML. This is not a simply plug-and-play replacement to the v1 API. With respect to an exclusive focus on JSON, the world has spoken, and it prefers JSON for REST-based API's. We've taken numerous steps to refactor the API to make it more REST-compliant. Note that this v2 API will be the preferred API from this point onward, so we encourage developers to migrate to this new format. We have put together some [migration notes](/web/documentation/migration-to-v2) that we encourage you to read carefully.\r\n\r\n##Photos\r\n\r\nSee our [photos documentation](http://api2.bigoven.com/web/documentation/recipe-images). \r\n\r\nFor more information on usage of this API, including features, pricing, rate limits, terms and conditions, please visit the [BigOven API website](http://api2.bigoven.com).",
    "docsUrl": "http://api2.bigoven.com/web/documentation",
    "url": "https://api.apis.guru/v2/specs/bigoven.com/partner/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api2.bigoven.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "api_key": {
                "label": "X-BigOven-API-Key (api_key)",
                "viewClass": "TextFieldView",
                "note": "Pass your api_key in the header (recommended) or as a URL parameter. For the URL parameter, use api_key. For the header, send it as a header value for: X-BigOven-API-Key"
            },
            "username": {
                "label": "Username (basic)",
                "viewClass": "TextFieldView",
                "note": "Basic HTTP Authentication is used for those endpoint calls where you want to act as a BigOven user -- e.g., to get the list of favorites of a signed-in user, or add items to their grocery list."
            },
            "password": {
                "label": "Password (basic)",
                "viewClass": "TextFieldView",
                "note": "Basic HTTP Authentication is used for those endpoint calls where you want to act as a BigOven user -- e.g., to get the list of favorites of a signed-in user, or add items to their grocery list."
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "Article_Get": {
            "main": "./lib/actions/Article_Get.js",
            "title": "Get a food article",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Article_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Article_Put": {
            "main": "./lib/actions/Article_Put.js",
            "title": "Update the article by term",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Article_Put.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Collection_GetCollection": {
            "main": "./lib/actions/Collection_GetCollection.js",
            "title": "Gets a recipe collection. A recipe collection is a curated set of recipes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Collection_GetCollection.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Collection_GetCollectionMeta": {
            "main": "./lib/actions/Collection_GetCollectionMeta.js",
            "title": "Gets a recipe collection metadata. A recipe collection is a curated set of recipes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Collection_GetCollectionMeta.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Collection_Collections": {
            "main": "./lib/actions/Collection_Collections.js",
            "title": "Get the list of current, seasonal recipe collections. From here, you can use the /collection/{id} endpoint to retrieve the recipes in those collections.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Collection_Collections.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Glossary_ByTerm": {
            "main": "./lib/actions/Glossary_ByTerm.js",
            "title": "Get food glossary article by term (e.g., asparagus). This editorial is (c) BigOven and MUST carry attribution and a link back to the glossary entry on BigOven.com.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Glossary_ByTerm.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Glossary_Get": {
            "main": "./lib/actions/Glossary_Get.js",
            "title": "DEPRECATED. Please use \"Article\", which is a new format for food glossary articles, which separates out the images.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Glossary_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_Delete": {
            "main": "./lib/actions/GroceryList_Delete.js",
            "title": "Delete all the items on a grocery list; faster operation than a sync with deleted items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_Get": {
            "main": "./lib/actions/GroceryList_Get.js",
            "title": "Get the user's grocery list.  User is determined by Basic Authentication.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_GroceryListRemoveMarkedItems": {
            "main": "./lib/actions/GroceryList_GroceryListRemoveMarkedItems.js",
            "title": "Clears the checked lines.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_GroceryListRemoveMarkedItems.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_Department": {
            "main": "./lib/actions/GroceryList_Department.js",
            "title": "Departmentalize a list of strings -- used for ad-hoc grocery list item addition",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_Department.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_grocerylist_item": {
            "main": "./lib/actions/post_grocerylist_item.js",
            "title": "Add a single line item to the grocery list",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_grocerylist_item.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_DeleteItemByGuid": {
            "main": "./lib/actions/GroceryList_DeleteItemByGuid.js",
            "title": "/grocerylist/item/{guid}  DELETE will delete this item assuming you own it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_DeleteItemByGuid.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_GroceryListItemGuid": {
            "main": "./lib/actions/GroceryList_GroceryListItemGuid.js",
            "title": "Update a grocery item by GUID",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_GroceryListItemGuid.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "post_grocerylist_line": {
            "main": "./lib/actions/post_grocerylist_line.js",
            "title": "Add a single line item to the grocery list",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/post_grocerylist_line.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_AddRecipe": {
            "main": "./lib/actions/GroceryList_AddRecipe.js",
            "title": "Add a Recipe to the grocery list.  In the request data, pass in recipeId, scale (scale=1.0 says to keep the recipe the same size as originally posted), markAsPending (true/false) to indicate that\r\n            the lines in the recipe should be marked in a \"pending\" (unconfirmed by user) state.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_AddRecipe.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "GroceryList_PostGroceryListSync": {
            "main": "./lib/actions/GroceryList_PostGroceryListSync.js",
            "title": "Synchronize the grocery list.  Call this with a POST to /grocerylist/sync",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/GroceryList_PostGroceryListSync.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_UploadUserAvatar": {
            "main": "./lib/actions/Images_UploadUserAvatar.js",
            "title": "POST: /image/avatar\r\n             \r\n            Testing with Postman (validated 11/20/2015):\r\n            1) Remove the Content-Type header; add authentication information\r\n            2) On the request, click Body and choose \"form-data\", then add a line item with \"key\" column set to \"file\" and on the right,\r\n            change the type of the input from Text to File.  Browse and choose a JPG.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_UploadUserAvatar.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Me_Index": {
            "main": "./lib/actions/Me_Index.js",
            "title": "Indexes this instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Me_Index.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_me": {
            "main": "./lib/actions/put_me.js",
            "title": "Puts me.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_me.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Me_PutMePersonal": {
            "main": "./lib/actions/Me_PutMePersonal.js",
            "title": "Puts me personal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Me_PutMePersonal.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Me_PutMePreferences": {
            "main": "./lib/actions/Me_PutMePreferences.js",
            "title": "Puts me preferences.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Me_PutMePreferences.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Me_GetOptions": {
            "main": "./lib/actions/Me_GetOptions.js",
            "title": "Gets the options.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Me_GetOptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "put_me_profile": {
            "main": "./lib/actions/put_me_profile.js",
            "title": "Puts me.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/put_me_profile.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Me_Skinny": {
            "main": "./lib/actions/Me_Skinny.js",
            "title": "Skinnies this instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Me_Skinny.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Post": {
            "main": "./lib/actions/Recipe_Post.js",
            "title": "Add a new recipe",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Post.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Put": {
            "main": "./lib/actions/Recipe_Put.js",
            "title": "Update a recipe",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Put.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_AutoComplete": {
            "main": "./lib/actions/Recipe_AutoComplete.js",
            "title": "Given a query, return recipe titles starting with query. Query must be at least 3 chars in length.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_AutoComplete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_AutoCompleteAllRecipes": {
            "main": "./lib/actions/Recipe_AutoCompleteAllRecipes.js",
            "title": "Automatics the complete all recipes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_AutoCompleteAllRecipes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_AutoCompleteMyRecipes": {
            "main": "./lib/actions/Recipe_AutoCompleteMyRecipes.js",
            "title": "Automatics the complete my recipes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_AutoCompleteMyRecipes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Categories": {
            "main": "./lib/actions/Recipe_Categories.js",
            "title": "Get a list of recipe categories (the ID field can be used for include_cat in search parameters)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Categories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_GetPendingByUser": {
            "main": "./lib/actions/Images_GetPendingByUser.js",
            "title": "Gets the pending by user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_GetPendingByUser.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_DeleteReply": {
            "main": "./lib/actions/Review_DeleteReply.js",
            "title": "DELETE a reply to a given review. Authenticated user must be the one who originally posted the reply.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_DeleteReply.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_PutReply": {
            "main": "./lib/actions/Review_PutReply.js",
            "title": "Update (PUT) a reply to a given review. Authenticated user must be the original one that posted the reply.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_PutReply.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_recipe_review__reviewId_": {
            "main": "./lib/actions/get_recipe_review__reviewId_.js",
            "title": "Get a given review by string-style ID. This will return a payload with FeaturedReply, ReplyCount.\r\n            Recommended display is to list top-level reviews with one featured reply underneath. \r\n            Currently, the FeaturedReply is the most recent one for that rating.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_recipe_review__reviewId_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_Put": {
            "main": "./lib/actions/Review_Put.js",
            "title": "Update a given top-level review.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_Put.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_GetReplies": {
            "main": "./lib/actions/Review_GetReplies.js",
            "title": "Get a paged list of replies for a given review.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_GetReplies.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_PostReply": {
            "main": "./lib/actions/Review_PostReply.js",
            "title": "POST a reply to a given review. The date will be set by server. Note that replies no longer have star ratings, only top-level reviews do.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_PostReply.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Scan": {
            "main": "./lib/actions/Recipe_Scan.js",
            "title": "POST an image as a new RecipeScan request\r\n                1)  Fetch the filename -- DONE\r\n                2)  Copy it to the pics/scan folder - ENSURE NO NAMING COLLISIONS -- DONE\r\n                3)  Create 120 thumbnail size  in pics/scan/120 -- DONE\r\n                4)  Insert the CloudTasks record\r\n                5)  Create the HIT\r\n                6)  Update the CloudTasks record with the HIT ID\r\n                7)  Email the requesing user\r\n                8)  Call out to www.bigoven.com to fetch the image and re-create the thumbnail",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Scan.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Delete": {
            "main": "./lib/actions/Recipe_Delete.js",
            "title": "Delete a Recipe (you must be authenticated as an owner of the recipe)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Get": {
            "main": "./lib/actions/Recipe_Get.js",
            "title": "Return full Recipe detail. Returns 403 if the recipe is owned by someone else.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_ZapRecipe": {
            "main": "./lib/actions/Recipe_ZapRecipe.js",
            "title": "Zaps the recipe.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_ZapRecipe.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Feedback": {
            "main": "./lib/actions/Recipe_Feedback.js",
            "title": "Feedback on a Recipe -- for internal BigOven editors",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Feedback.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_UploadRecipeImage": {
            "main": "./lib/actions/Images_UploadRecipeImage.js",
            "title": "POST: /recipe/{recipeId}/image?lat=42&amp;lng=21&amp;caption=this%20is%20my%20caption\r\n             \r\n             Note that caption, lng and lat are all optional, but must go on the request URI as params because this endpoint\r\n             needs a multipart/mime content header and will not parse JSON in the body along with it.\r\n            \r\n             Testing with Postman (validated 11/20/2015):\r\n             1) Remove the Content-Type header; add authentication information\r\n             2) On the request, click Body and choose \"form-data\", then add a line item with \"key\" column set to \"file\" and on the right,\r\n             change the type of the input from Text to File.  Browse and choose a JPG.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_UploadRecipeImage.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_Get": {
            "main": "./lib/actions/Images_Get.js",
            "title": "Get all the images for a recipe. DEPRECATED. Please use /recipe/{recipeId}/photos.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Note_Post": {
            "main": "./lib/actions/Note_Post.js",
            "title": "HTTP POST a new note into the system.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Note_Post.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Note_Delete": {
            "main": "./lib/actions/Note_Delete.js",
            "title": "Delete a review\r\n                do a DELETE Http request of /note/{ID}",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Note_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Note_Get": {
            "main": "./lib/actions/Note_Get.js",
            "title": "Get a given note. Make sure you're passing authentication information in the header for the user who owns the note.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Note_Get.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Note_Put": {
            "main": "./lib/actions/Note_Put.js",
            "title": "HTTP PUT (update) a Recipe note (RecipeNote).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Note_Put.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Note_GetNotes": {
            "main": "./lib/actions/Note_GetNotes.js",
            "title": "recipe/100/notes",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Note_GetNotes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_GetRecipePhotos": {
            "main": "./lib/actions/Images_GetRecipePhotos.js",
            "title": "Get all the photos for a recipe",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_GetRecipePhotos.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Related": {
            "main": "./lib/actions/Recipe_Related.js",
            "title": "Get recipes related to the given recipeId",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Related.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_recipe__recipeId__review": {
            "main": "./lib/actions/get_recipe__recipeId__review.js",
            "title": "Get *my* review for the recipe {recipeId}, where \"me\" is determined by standard authentication headers",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_recipe__recipeId__review.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_Post": {
            "main": "./lib/actions/Review_Post.js",
            "title": "Add a new review. Only one review can be provided per {userId, recipeId} pair. Otherwise your review will be updated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_Post.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_Delete": {
            "main": "./lib/actions/Review_Delete.js",
            "title": "Delete a review by recipeId and reviewId. DEPRECATED. Please see recipe/review/{reviewId} for the preferred method.\r\n            (We are moving from an integer-based ID system to a GUID-style string-based ID system for reviews and replies.)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_Delete.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "get_recipe__recipeId__review__reviewId_": {
            "main": "./lib/actions/get_recipe__recipeId__review__reviewId_.js",
            "title": "Get a given review - DEPRECATED. See recipe/review/{reviewId} for the current usage.\r\n            Beginning in January 2017, BigOven moded from an integer-based ID system to a GUID-style string-based ID system for reviews and replies.\r\n            We are also supporting more of a \"Google Play\" style model for Reviews and Replies. That is, there are top-level Reviews and then\r\n            an unlimited list of replies (which do not carry star ratings) underneath existing reviews. Also, a given user can only have one review \r\n            per recipe. Existing legacy endpoints will continue to work, but we strongly recommend you migrate to using the newer endpoints listed\r\n            which do NOT carry the \"DEPRECATED\" flag.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/get_recipe__recipeId__review__reviewId_.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_PutLegacy": {
            "main": "./lib/actions/Review_PutLegacy.js",
            "title": "HTTP PUT (update) a recipe review. DEPRECATED. Please see recipe/review/{reviewId} PUT for the new endpoint.\r\n            We are moving to a string-based primary key system, no longer integers, for reviews and replies.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                },
                "body_content_type": {
                    "viewClass": "SelectView",
                    "label": "Body Content-Type",
                    "required": true,
                    "prompt": "Choose a body Content-Type.",
                    "model": {
                        "application/json": "application/json",
                        "text/json": "text/json",
                        "application/xml": "application/xml",
                        "text/xml": "text/xml",
                        "application/x-www-form-urlencoded": "application/x-www-form-urlencoded"
                    }
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_PutLegacy.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Review_GetReviews": {
            "main": "./lib/actions/Review_GetReviews.js",
            "title": "Get paged list of reviews for a recipe. Each review will have at most one FeaturedReply, as well as a ReplyCount.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Review_GetReviews.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Images_GetScanImages": {
            "main": "./lib/actions/Images_GetScanImages.js",
            "title": "Gets a list of RecipeScan images for the recipe. There will be at most 3 per recipe.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Images_GetScanImages.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_RecipeSearch": {
            "main": "./lib/actions/Recipe_RecipeSearch.js",
            "title": "Search for recipes. There are many parameters that you can apply. Starting with the most common, use title_kw to search within a title.\r\n            Use any_kw to search across the entire recipe.\r\n            If you'd like to limit by course, set the parameter \"include_primarycat\" to one of (appetizers,bread,breakfast,dessert,drinks,maindish,salad,sidedish,soup,marinades,other).\r\n            If you'd like to exclude a category, set exclude_cat to one or more (comma-separated) list of those categories to exclude.\r\n            If you'd like to include a category, set include_cat to one or more (comma-separated) of those categories to include.\r\n            To explicitly include an ingredient in your search, set the parameter \"include_ing\" to a CSV of up to three ingredients, e.g.:include_ing=mustard,chicken,beef%20tips\r\n            To explicitly exclude an ingredient in your search, set the parameter \"exclude_ing\" to a CSV of up to three ingredients.\r\n            All searches must contain the paging parameters pg and rpp, which are integers, and represent the page number (1-based) and results per page (rpp).\r\n            So, to get the third page of a result set paged with 25 recipes per page, you'd pass pg=3&amp;rpp=25\r\n            If you'd like to target searches to just a single target user's recipes, set userId=the target userId (number).\r\n            Or, you can set username=theirusername\r\n            vtn;vgn;chs;glf;ntf;dyf;sff;slf;tnf;wmf;rmf;cps\r\n            cuisine\r\n            photos\r\n            filter=added,try,favorites,myrecipes\\r\\n\\r\\n\r\n            folder=FolderNameCaseSensitive\r\n            coll=ID of Collection",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_RecipeSearch.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_GetRandomRecipe": {
            "main": "./lib/actions/Recipe_GetRandomRecipe.js",
            "title": "Get a random, home-page-quality Recipe.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_GetRandomRecipe.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_Raves": {
            "main": "./lib/actions/Recipe_Raves.js",
            "title": "Get the recipe/comment tuples for those recipes with 4 or 5 star ratings",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_Raves.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_RecentViews": {
            "main": "./lib/actions/Recipe_RecentViews.js",
            "title": "Get a list of recipes that the authenticated user has most recently viewed",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_RecentViews.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "Recipe_RecipeSearchRandom": {
            "main": "./lib/actions/Recipe_RecipeSearchRandom.js",
            "title": "Search for recipes. There are many parameters that you can apply. Starting with the most common, use title_kw to search within a title.\r\n            Use any_kw to search across the entire recipe.\r\n            If you'd like to limit by course, set the parameter \"include_primarycat\" to one of (appetizers,bread,breakfast,dessert,drinks,maindish,salad,sidedish,soup,marinades,other).\r\n            If you'd like to exclude a category, set exclude_cat to one or more (comma-separated) list of those categories to exclude.\r\n            If you'd like to include a category, set include_cat to one or more (comma-separated) of those categories to include.\r\n            To explicitly include an ingredient in your search, set the parameter \"include_ing\" to a CSV of up to three ingredients, e.g.:include_ing=mustard,chicken,beef%20tips\r\n            To explicitly exclude an ingredient in your search, set the parameter \"exclude_ing\" to a CSV of up to three ingredients.\r\n            All searches must contain the paging parameters pg and rpp, which are integers, and represent the page number (1-based) and results per page (rpp).\r\n            So, to get the third page of a result set paged with 25 recipes per page, you'd pass pg=3&amp;rpp=25\r\n            If you'd like to target searches to just a single target user's recipes, set userId=the target userId (number).\r\n            Or, you can set username=theirusername\r\n            vtn;vgn;chs;glf;ntf;dyf;sff;slf;tnf;wmf;rmf;cps\r\n            cuisine\r\n            photos\r\n            filter=added,try,favorites,myrecipes\\r\\n\\r\\n\r\n            folder=FolderNameCaseSensitive\r\n            coll=ID of Collection",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Recipe_RecipeSearchRandom.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}